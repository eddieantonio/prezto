#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Options:
# extendedglob
# dotglob
# no_notify
# no_clobber
# no_beep

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Source my interactive environment.
if [ -f "$HOME/.env" ]; then
  source "$HOME/.env"
fi

# Source my aliases.
if [ -f "$HOME/.aliases" ]; then
  source "$HOME/.aliases"
fi

# TODO: source-this-extra?
# extra machine-specific stuff...
if [ -e ~/.source-this-extra.sh ] ; then
  source ~/.source-this-extra.sh
fi


##
# Autojump
##
# Lazy load: https://kev.inburke.com/kevin/profiling-zsh-startup-time/
function j {
  (( $+commands[brew] )) && {
    local pfx=$(brew --prefix)
    [[ -f "$pfx/etc/autojump.sh" ]] && . "$pfx/etc/autojump.sh"
    j "$@"
  }
}

# TODO: an autoload for jo, etc.

# Respect symlinks
# https://github.com/wting/autojump/issues/124
export AUTOJUMP_KEEP_SYMLINKS=1


##
# Pyenv
##
# Lazy load: https://kev.inburke.com/kevin/profiling-zsh-startup-time/
pyenv() {
  #Essentially on the first invocation, these functions source the actual
  #definition and then immediately call it with the arguments passed in.
  eval "$( command pyenv init - )"
  # eval "$(pyenv virtualenv-init -)"
  pyenv "$@"
}


##
# Travis-CI Gem
##
# Lazy-load it.
travis() {
  if [ -f "$HOME/.travis/travis.sh" ]; then
    source "$HOME/.travis/travis.sh"
  fi

  # Delete this function, and call the original Travis-CI function:
  unset -f travis
  travis "$@"
}


# iTerm2 shell integration...
if [ -e ${HOME}/.iterm2_shell_integration.zsh ]; then
  source ${HOME}/.iterm2_shell_integration.zsh;
  # Use my version of imgcat(1).
  alias imgcat && unalias imgcat
fi

##
# Fancy Ctrl-Z
#
# When pressing Ctrl+Z on an empty buffer, `fg` the suspended process.
# Use case: ctrl+z out of Vim to run some commands; ctrl+z to quickly jump
# back into vim.
#
# Adapted from:
# http://sheerun.net/2014/03/21/how-to-boost-your-vim-productivity/
##
fancy-ctrl-z () {
  local bgjobs="$(jobs -sp | wc -l)"

  # Check if there is any contents in the buffer.
  # AND if there are any suspended jobs.
  if (( $#BUFFER == 0 && $bgjobs > 0 )); then
    # Type `fg`<CR>
    BUFFER="fg"
    zle accept-line
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

##
# Options
# See zshoptions(1)
##
# Allow comments even in interactive shells.
setopt INTERACTIVE_COMMENTS
# On an ambiguous completion, instead of listing possibilities or beeping,
# insert the first match immediately.
setopt MENU_COMPLETE
# Default zsh style: show an inverse-bold '%' for an incomplete line.
setopt PROMPT_CR PROMPT_SP

##
# Miscellaneous weirdness.
##

# In iTerm2, clears the scrollback buffer on ctrl+L
if [[ $widgets[clear-screen] == 'builtin' ]]; then
  iterm2_clear_screen() {
      local escape_sequence

      # When in iTerm2...
      # https://www.iterm2.com/documentation-escape-codes.html
      if ((${+ITERM_SESSION_ID})); then
          escape_sequence='\e]1337;ClearScrollback\007'
      else
          # clear screen and move cursor to (0, 0)
          escape_sequence='\e[2J\e[0;0H'
      fi

      # enable output to terminal
      zle -I
      print -n "$escape_sequence"
  }

  zle -N clear-screen iterm2_clear_screen
fi

##
# Erlang stuff.
##
manpath+=(
  /usr/local/opt/erlang/lib/erlang/man
)
#

autoload _exercism
compdef '_exercism' exercism

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Giella
export GTHOME=/Users/eddieantonio/Projects/giella
export GTCORE=$GTHOME/giella-core
export GTLANG_crk=/Users/eddieantonio/Projects/giella/langs/crk

# brew ruby, with a user install thing.
export PATH="/usr/local/opt/ruby/bin:$PATH"
export GEM_HOME=$HOME/.gem/ruby/2.6.0
export PATH=$GEM_HOME/bin:$PATH

# lmlayer-cli
export LMPATH=$HOME/Work/lexical-models/release
