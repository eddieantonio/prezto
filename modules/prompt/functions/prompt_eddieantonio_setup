# eddieantonio
# by Eddie Antonio Santos
# Apache 2.0 License

# Loosely derived from: Pure by Sindre Sorhus
# https://github.com/sindresorhus/pure
# MIT License


# Relevant documentation/reference:
#
# ZSH prompt expansion:
# http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
#
# ANSI escape codes:
# http://ascii-table.com/ansi-escape-sequences.php

# An assortment of colors
#
#  see: https://jonasjacek.github.io/colors/
#
#   74 - SteelBlue
#  116 - DarkSlateGrey
#  120 - LightGreen
#  124 - Red3
#  200 - Magenta2
#  221 - LightGoldenrod2



prompt_pure_set_title() {
    # emacs terminal does not support settings the title
    (( ${+EMACS} )) && return

    # tell the terminal we are setting the title
    print -n '\e]0;'
    # show hostname if connected through ssh
    [[ -n $SSH_CONNECTION ]] && print -Pn '(%m) '
    case $1 in
        expand-prompt)
            print -Pn $2;;
        ignore-escape)
            print -rn $2;;
    esac
    # end set title
    print -n '\a'
}

# "Executed just after a command has been read and is about to be executed."
# http://zsh.sourceforge.net/Doc/Release/Functions.html
prompt_eddieantonio_preexec() {
    local abbrev_command="$2"

    # Shows the current dir and executed command in the title while a process is active
    prompt_pure_set_title 'ignore-escape' "${PWD} ‚ùØ $abbrev_command"
}

prompt_eddieantonio_precmd() {
    # Check git status and dump it in psvar.
    git-info-psvar

    # Set the terminal title.
    prompt_pure_set_title 'expand-prompt' '%~'
}

# Prints the format of the left prompt.
# Use print -P "$(prompt_eddieantonio_lprompt char)" to preview.
prompt_eddieantonio_lprompt() {
    # The prompt char. Feel free to change it.
    local pchar=${1:-‚ùØ}

    local directory_colour=blue
    local success_colour=74
    local error_colour=124

    # easantos@deepdish Show username@host if logged-in through SSH
    [[ -n $SSH_CONNECTION ]] && print -n '%F{green}%n@%m%f '

    # ~         | current working dir, with ~ substitution
    print -n '%F{'$directory_colour'}%1~%f'

    # ‚öô        | Add a symbol when there's at least one background job.
    print -n '%(1j.%B‚öô%b.)'

    # TODO: virtualenv indicator, maybe with ‚öï or üêç

    # 127       | sets the background colour depending on previous return
    #           | code. Displays the return code if non-zero.
    print -n '%(?.%F{'$success_colour'}'
    print -n '. %F{'$error_colour'}%?)'

    # ‚ùØ‚ùØ        | outputs extra prompts, if in subshells (up to 3 levels).
    print -n "%(2L.$pchar.)%(3L.$pchar.)"

    # ‚ùØ         | the final prompt character.
    print -n "$pchar"

    #           | clear the background colour; add a space
    print -n '%f '
}

# Prints the format of the right prompt.
# Use print -P "$(prompt_eddieantonio_rprompt)" to preview.
prompt_eddieantonio_rprompt() {
    # added     ‚óè (green)
    # removed   ‚óè (red)
    # unstaged  ‚óè (yellow)
    # untracked ‚óå (white)
    # renamed   ‚ÜØ (green)
    # stashed   ‚öë (white)

    # 13:59     | The time, in a very faint colour.
    print -n '%F{242}%T%f'

    # Display the git prompt ONLY when the precmd has populated psvar with
    # repository status.
    print -n '%(1v.'
    print -n ' '

    #           | Changes branch name colour on merge conflict.
    print -n '%(3V.%F{200}.)'

    # master    | the branch name
    print -n '%1v%f'

    # ‚óè         | red ‚óè if deletions
    print -n '%(8V. %F{red}‚óè%f.)'
    # ‚óè         | yellow ‚óè if modifications
    print -n '%(6V. %F{yellow}‚óè%f.)'
    # ‚óè         | green ‚óè if additions
    print -n '%(7V. %F{green}‚óè%f.)'
    # ‚ÜØ         | green ‚ÜØ if renamed
    print -n '%(9V. %F{green}‚ÜØ%f.)'
    # ‚óå         | plain ‚óå if untracked
    print -n '%(4V. ‚óå%f.)'
    # ‚öë         | plain ‚öë if stashed
    print -n '%(2V. ‚öë%f.)'

    print -n '.)'
}

prompt_eddieantonio_setup() {
    prompt_opts=(percent)

    zmodload zsh/zle

    add-zsh-hook precmd prompt_eddieantonio_precmd
    add-zsh-hook preexec prompt_eddieantonio_preexec

    # Create my prompt.
    PROMPT="$(prompt_eddieantonio_lprompt ‚ùØ)"
    RPROMPT="$(prompt_eddieantonio_rprompt)"
}

prompt_eddieantonio_setup "$@"
# vim: set ft=zsh:
